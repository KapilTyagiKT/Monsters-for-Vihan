{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","el","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","jsonObj","json","Monsters","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAGaA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,aCJlBC,G,MAAW,SAACR,GAErB,OAEI,sBAAKC,UAAY,YAAjB,cACID,EAAMS,SAASC,KAAI,SAAAC,GAAE,OACjB,cAAC,EAAD,CAAkBP,QAAWO,GAAlBA,EAAGN,YCNjBO,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aAEvC,OACQ,uBAAOb,UAAY,SACjBc,KAAK,SACLF,YAAcA,EACdG,SAAWF,MCuCNG,G,wDA1Cb,aAAe,IAAD,8BAEZ,gBAEKC,MAAQ,CACXT,SAAW,GACXU,YAAa,IANH,E,qDAYd,WAAqB,IAAD,OAElBC,MAAM,8CACJC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GAAQ,OAAI,EAAKC,SAAS,CAAChB,SAAWe,S,oBAK/C,WAAU,IAAD,OAEP,EAAgCE,KAAKR,MAA9BT,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAAIA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBACpG,OACE,sBAAK5B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEY,YAAc,kBACdC,aAAiB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAWxB,SAAYkB,W,GAlCbO,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90f9496a.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = (props) => {\n    \n    return (\n        <div className = 'card-container'>\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2> {props.monster.name}</h2>\n            <p> {props.monster.email}</p>\n        </div>\n    );\n    }\n","import React from 'react';\nimport  { Card }  from '../card/card.component';\nimport './card-list.style.css';\n\n\nexport const CardList = (props) => {\n    \n    return (\n                    \n        <div className = 'card-list'> {\n            props.monsters.map(el => (\n                <Card key={el.id} monster = {el} />\n            ))}\n        </div>\n    \n    );\n}","import React from 'react';\n\nimport './search-box.style.css';\n\n\nexport const SearchBox = ({placeholder,handleChange})=> {\n\nreturn (\n        <input className = 'search'\n          type='search'\n          placeholder= {placeholder}\n          onChange= {handleChange}\n        />\n);\n};\n\n","import React from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    \n    super();\n\n    this.state = {\n      monsters : [],\n      searchField :''\n      \n    }\n\n  }\n  \n  componentDidMount() {\n    \n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(jsonObj => jsonObj.json())\n     .then(Monsters => this.setState({monsters : Monsters}));\n     \n  }\n    \n  \n  render() {\n    \n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className='App'>\n        <h1>Monsters for Vihan</h1>\n        <SearchBox \n          placeholder = 'search monsters' \n          handleChange = { e => this.setState({searchField: e.target.value})}\n        />\n        <CardList  monsters = {filteredMonsters} />\n        \n      </div>\n    )\n  };\n};\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n     </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}